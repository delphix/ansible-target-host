---
#
# Copyright (c) 2019 by Delphix. All rights reserved.
#

# Check for supported OS and minimum version
- name: Check for correct OS family & min version
  assert:
    that:
      - "ansible_os_family == '{{ os_family_supported }}'"
      - "ansible_distribution_version is version('{{ os_min_supported_version }}', '>=')"

# Include variables and define needed variables.
- name: Include OS-specific variables.
  include_vars: "{{ ansible_os_family }}.yml"

- name: Define packages.
  set_fact:
    packages: "{{ __packages | list }}"
  when: packages is not defined

# Setup/install tasks.
- include_tasks: setup-{{ ansible_os_family }}.yml

#
# Configure the 'delphix' user and home directory
#
- name: Add Delphix group
  group:
    name: "{{ delphix_group }}"

- name: Add Delphix user
  user:
    name: "{{ delphix_user }}"
    home: "{{ delphix_home }}"
    group: "{{ delphix_group }}"
    comment: "{{ user_comment }}"

- name: Create delphix directories
  file:
    path: "{{ item.path }}"
    owner: "{{ delphix_user }}"
    group: "{{ delphix_group }}"
    mode: "{{ item.mode }}"
    state: directory
  with_items:
    - { path: "{{ delphix_toolkit }}", mode: "0770" }
    - { path: "{{ delphix_home }}/.ssh", mode: "0700" }
    - { path: "{{ delphix_mount }}", mode: "0700" }

- name: Check to see if "{{ delphix_home }}/.ssh/authorized_keys" exists
  stat:
    path: "{{ delphix_home }}/.ssh/authorized_keys"
  register: ak

- name: Create empty authorized keys
  file:
    path: "{{ delphix_home }}/.ssh/authorized_keys"
    owner: "{{ delphix_user }}"
    group: "{{ delphix_group }}"
    mode: 0600
    state: "{{ 'file' if ak.stat.exists else 'touch' }}"

- name: Set SSH key
  blockinfile:
    dest: "{{ delphix_home }}/.ssh/authorized_keys"
    state: present
    block: |
      {{ item.key }}
    marker: "# {mark} ANSIBLE MANAGED BLOCK {{ item | hash('md5') }}"
  with_items: "{{ delphix_ssh_keys }}"
  when: delphix_ssh_keys is not none

#
# This role will configure sudoers for use as a target on any platform. If more
# fine-grained access is required, this could be placed behind a number of
# variables to tune it for platforms. It could also be tightened up to only
# allow commands with specific arguments.
#
- name: Configure delphix user for sudo
  blockinfile:
    dest: /etc/sudoers
    state: present
    block: |
      Defaults:{{ delphix_user }} !requiretty
      {{ delphix_user }} ALL=NOPASSWD: {{ allowed_sudo_commands | join(', ')  }}
    validate: "visudo -cf %s"

#
# Configure kernel parameters
#
# net.ipv4.tcp_timestamps = 1
# net.ipv4.tcp_sack = 1
# net.ipv4.tcp_window_scaling = 1
# net.ipv4.tcp_rmem = 4096 16777216 16777216
# net.ipv4.tcp_wmem = 4096 4194304 16777216
#

- sysctl:
    name: net.ipv4.tcp_timestamps
    value: '1'
    state: present
    reload: yes

- sysctl:
    name: net.ipv4.tcp_sack
    value: '1'
    state: present
    reload: yes

- sysctl:
    name: net.ipv4.tcp_window_scaling
    value: '1'
    state: present
    reload: yes

- sysctl:
    name: net.ipv4.tcp_rmem
    value: '4096 16777216 16777216'
    state: present
    reload: yes

- sysctl:
    name: net.ipv4.tcp_wmem
    value: '4096 4194304 16777216'
    state: present
    reload: yes

#
# Include Oracle specific tasks if install_oracle=true
#

- include_tasks: "oracle.yml"
  when: install_oracle
